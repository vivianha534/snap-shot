{"version":3,"sources":["api/index.js","constants/actionTypes.js","actions/postsActions.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Form/Form.js","components/Home/Home.js","assets/Logo.svg","components/Navbar/Navbar.js","components/Auth/Input.js","components/Auth/icon.js","components/Auth/Auth.js","actions/auth.js","App.js","reportWebVitals.js","reducers/auth.js","reducers/index.js","reducers/postsReducers.js","index.js"],"names":["API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","updatePost","id","updatedPost","patch","deletePost","delete","likePost","signIn","formData","post","signUp","CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","AUTH","LOGOUT","createPost","dispatch","a","newPost","data","type","payload","console","log","message","api","useStyles","makeStyles","theme","createStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useDispatch","user","Likes","likes","length","find","like","result","googleId","_id","fontSize","Card","className","CardMedia","image","selectedFile","Typography","variant","name","moment","createdAt","fromNow","creator","Button","style","size","onClick","component","tags","map","tag","gutterBottom","CardContent","CardActions","disabled","mainContainer","alignItems","marginTop","Posts","posts","useSelector","state","Grid","container","spacing","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","p","useEffect","handleSubmit","e","preventDefault","clear","Paper","autoComplete","noValidate","onSubmit","TextField","label","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","align","appBar","heading","marginLeft","Home","get","Grow","in","Container","justify","textDecoration","toolbar","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","Navbar","history","useHistory","location","useLocation","setUser","logout","push","decode","exp","Date","getTime","AppBar","Link","to","src","Logo","alt","Toolbar","Avatar","imageUrl","charAt","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","icon","viewBox","fill","d","avatar","secondary","main","submit","googleButton","initialFormState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","setFormData","googleSuccess","res","profileObj","tokenId","error","maxWidth","elevation","prevShowPassword","clientId","render","renderProps","startIcon","onSuccess","onFailure","cookiePolicy","prevIsSignup","App","breakpoints","down","flexdirection","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","authData","action","setItem","stringify","combineReducers","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3878029c.chunk.js","sourcesContent":["import axios from 'axios';\n\n//url pointing to backend route\nconst API = axios.create({baseURL: 'https://snapshot-project.herokuapp.com/'})\n\n//happens before all the requests below\n//middleware can't work w/o this\nAPI.interceptors.request.use((req)=>{\n    //sends our token to backend so middleware can verify we're logged in\n    if(localStorage.getItem('profile')){\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n    }\n    return req;\n})\n//url pointing to backend route\n// const url = 'https://snapshot-project.herokuapp.com/posts'\n\nexport const fetchPosts = () => API.get('/posts')\nexport const createPost = (newPost) => API.post('/posts', newPost)\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost)\nexport const deletePost = (id) => API.delete(`/posts/${id}`)\nexport const likePost = (id, updatedPost) => API.patch(`/posts/${id}/likePost`) \n\nexport const signIn = (formData) => API.post('/user/signIn', formData)\nexport const signUp = (formData) => API.post('/user/signUp', formData)\n","export const CREATE ='CREATE'\nexport const UPDATE ='UPDATE'\nexport const DELETE ='DELETE'\nexport const FETCH_ALL = 'FETCH_ALL'\nexport const LIKE = 'LIKE'\n\nexport const AUTH ='AUTH'\nexport const LOGOUT = 'LOGOUT'\n","import * as api from '../api'\nimport {FETCH_ALL, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes'\n//Action creators are functions that return actions\n//redux thunk allows us to specify another arrow function\nexport const getPosts = () => async(dispatch) => {\n    try{\n        //first get response from api which always has data object\n        //data represents the post\n        const {data} = await api.fetchPosts()\n\n        const action = {type: FETCH_ALL, payload: data}\n        dispatch(action);\n    }catch(error){\n        console.log(error.message)\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n      const { data } = await api.createPost(post);\n  \n      dispatch({ type: CREATE, payload: data });\n      console.log(\"create post\")\n    } catch (error) {\n      console.log(error.message);\n    }\n};\n\nexport const updatePost = (id, updatedPost) => async(dispatch) =>{\n  try{\n    //returns updated post\n    const {data} = await api.updatePost(id, updatedPost)\n\n    dispatch({type: UPDATE, payload: data})\n  }catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const deletePost = (id) => async(dispatch) => {\n  try{\n    await api.deletePost(id);\n\n    dispatch({type: DELETE, payload: id})\n  }catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const likePost = (id) => async(dispatch) =>{\n  try{\n    //returns updated post\n    const {data} = await api.likePost(id)\n\n    dispatch({type: LIKE, payload: data})\n  }catch(error){\n    console.log(error.message)\n  }\n}","import React from 'react'\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport {Card, CardActions, CardContent, CardMedia, Button, IconButton, Typography} from '@material-ui/core'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport moment from 'moment'\nimport {useDispatch} from 'react-redux'\nimport{deletePost, likePost} from \"../../../actions/postsActions\"\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n      media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n      },\n      border: {\n        border: 'solid',\n      },\n      fullHeightCard: {\n        height: '100%',\n      },\n      card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n      },\n      overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n      },\n      overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n      },\n      grid: {\n        display: 'flex',\n      },\n      details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n      },\n      title: {\n        padding: '0 16px',\n      },\n      cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n      },\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\nconst Post = ({post, setCurrentId}) =>{\n    const classes = useStyles()\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    const Likes = () => {\n      if (post.likes.length > 0) {\n        return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n          ? (\n            <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n          ) : (\n            <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n          );\n      }\n  \n      return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n    };\n\n    return (\n      <Card className={classes.card}>\n        <CardMedia className={classes.media} title={post.title} image={post.selectedFile} />\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n        </div>\n        <div className={classes.overlay2}>\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n          <Button className={classes.overlay2} style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}>\n            Edit<MoreHorizIcon fontSize=\"default\" />\n          </Button>\n        )}\n        </div>\n        <div className={classes.details}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n        </div>\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\n            <Likes/>\n          </Button>\n          {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n            <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\n              <DeleteIcon fontSize=\"small\" /> Delete\n              {console.log(\"delete\")}\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n    );\n}\n\nexport default Post","import React from 'react'\nimport Post from './Post/Post'\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport {useSelector} from 'react-redux'\nimport {Grid, CircularProgress} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n      mainContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: \"1vh\",\n      },\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\nconst Posts = ({setCurrentId}) =>{\n    const classes = useStyles()\n    const posts = useSelector((state) => state.Posts)\n\n    return(\n      !posts.length ? <CircularProgress /> : (\n        <Grid className={classes.mainContainer} container alignItems = \"stretch\" spacing={3}>\n          {posts.map((post)=>(\n            <Grid key={post.id} item xs={12} sm={6}>\n              <Post post={post} setCurrentId={setCurrentId}/>\n            </Grid>\n          ))}\n        </Grid>\n      )\n    )\n}\n\nexport default Posts","import React, {useState, useEffect} from 'react'\nimport {TextField, Button, Typography, Paper} from '@material-ui/core'\nimport {makeStyles, createStyles} from \"@material-ui/core/styles\"\nimport FileBase from 'react-file-base64'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {createPost, updatePost} from '../../actions/postsActions'\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n        },\n      },\n      paper: {\n        padding: theme.spacing(2),\n        marginTop: \"2.5vh\",\n      },\n      form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n      },\n      fileInput: {\n        width: '97%',\n        margin: '10px 0',\n      },\n      buttonSubmit: {\n        marginBottom: 10,\n      },\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\n\nconst Form = ({currentId, setCurrentId}) =>{\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile:''})\n    const user = JSON.parse(localStorage.getItem('profile'))\n    //fetch data from redux\n    //if currentId != null, find post that has same id as currentId\n    const updatedPost = useSelector((state) => currentId ? state.Posts.find((p) => p._id === currentId) : null)\n\n    //use useEffect to populate the form if we want to update a post\n    //dependency array tells us when we should run callback function\n    //in this case it's when updatedPost value changes from nothing to the actual post\n    useEffect(() =>{\n      if(updatedPost){\n          setPostData(updatedPost);\n      }\n    }, [updatedPost])\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      \n      if (!currentId) {\n        dispatch(createPost({ ...postData, name: user?.result?.name }));\n      } else {\n        dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      }\n      clear();\n    };  \n\n    const clear = () =>{\n      setCurrentId(null)\n      setPostData({ title: '', message: '', tags: '', selectedFile:''})\n    }\n\n    if(!user?.result?.name){\n      return(\n        <Paper className={classes.paper}>\n          <Typography variant = \"h6\" align=\"center\">\n            Please Sign In to create your own memories, and like other's memories\n          </Typography>\n        </Paper>\n      )\n    }\n    \n    return(\n      <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\"> {currentId ? 'Editing': 'Creating'} a Memory </Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n    )\n}\n\nexport default Form","import React, {useState, useEffect} from 'react'\nimport Posts from \"../Posts/Posts\"\nimport Form from \"../Form/Form\"\nimport {Container, Grow, Grid} from '@material-ui/core'\nimport {useDispatch} from 'react-redux'\nimport{getPosts} from '../../actions/postsActions'\nimport {makeStyles,createStyles} from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n      appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n      heading: {\n        color: 'rgba(0,183,255, 1)',\n      },\n      image: {\n        marginLeft: '15px',\n      },\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\nconst Home = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const [currentId, setCurrentId] = useState(null);\n  \n    useEffect(() =>{\n      dispatch(getPosts());\n    },[currentId, dispatch])\n\n    return (\n        <Grow in>\n            <Container>\n                <Grid container className={classes.mainContainer} justify=\"space-between\" alignItems = \"stretch\" spacing=\"3\">\n                    <Grid item xs={12} sm={7}>\n                    <Posts setCurrentId={setCurrentId}/>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                    <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home\n","export default __webpack_public_path__ + \"static/media/Logo.caca11a9.svg\";","import React, {useState,useEffect} from 'react'\nimport Logo from '../../assets/Logo.svg'\nimport {makeStyles,createStyles} from \"@material-ui/core/styles\"\nimport { deepPurple } from '@material-ui/core/colors';\nimport {AppBar, Typography, Avatar, Toolbar, Button} from '@material-ui/core' \nimport {Link, useHistory, useLocation} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport decode from 'jwt-decode'\n\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        appBar: {\n            borderRadius: 15,\n            margin: '30px 0',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '10px 50px',\n          },\n          heading: {\n            color: 'rgba(0,183,255, 1)',\n            textDecoration: 'none',\n          },\n          image: {\n            marginLeft: '15px',\n          },\n          toolbar: {\n            display: 'flex',\n            justifyContent: 'flex-end',\n            width: '400px',\n          },\n          profile: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '400px',\n          },\n          userName: {\n            display: 'flex',\n            alignItems: 'center',\n          },\n          brandContainer: {\n            display: 'flex',\n            alignItems: 'center',\n          },\n          purple: {\n            color: theme.palette.getContrastText(deepPurple[500]),\n            backgroundColor: deepPurple[500],\n          },\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\nconst Navbar = () =>{\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const location = useLocation()\n\n    //retrieve user from local storage\n    const[user,setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n\n    const logout = () =>{\n        dispatch({type: 'LOGOUT'})\n        //bring user back to homepage after logout\n        history.push('/')\n        setUser(null)\n    }\n\n    //when location changes set the user, we do this because after logging in we get redirected from /auth to just /\n    useEffect(()=>{\n        //checking if token exists\n        const token = user?.token\n\n        if(token){\n            const decodedToken = decode(token)\n\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout()\n        }\n        \n        //set user to the user in local storage\n        setUser(JSON.parse(localStorage.getItem('profile')))\n    }, [location])\n\n\n    return(\n        <div>\n            <AppBar className = {classes.appBar} position=\"static\" color=\"inherit\">\n                <div className = {classes.brandContainer}>\n                    <Typography component={Link} to=\"/\" className = {classes.heading} variant = \"h2\" align=\"center\">Snap Shot</Typography>\n                    <img className = {classes.image} src={Logo} alt = \"memories\" height = \"60\" />\n                </div>\n                <Toolbar className={classes.toolbar}>\n                    {user ?(\n                        <div className={classes.profile}>\n                            <Avatar className={classes.purple} alt = {user.result.name} src={user.result.imageUrl}>\n                                {user.result.name.charAt(0)}\n                            </Avatar>\n                            <Typography className={classes.userName} variant=\"h6\"> \n                                {user.result.name} \n                            </Typography>\n                            <Button variant = \"contained\" className={classes.logout} color = \"secondary\" onClick={logout}>\n                                Logout\n                            </Button>\n                        </div>\n                    ):(\n                        <Button component = {Link} to = \"/auth\" variant = \"contained\" color = \"primary\">\n                            Sign In\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst Input = ({ name, handleChange, label, half, autoFocus, type, handleShowPassword }) => (\n  <Grid item xs={12} sm={half ? 6 : 12}>\n    <TextField\n      name={name}\n      onChange={handleChange}\n      variant=\"outlined\"\n      required\n      fullWidth\n      label={label}\n      autoFocus={autoFocus}\n      type={type}\n      InputProps={name === 'password' ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleShowPassword}>\n              {type === 'password' ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      } : null}\n    />\n  </Grid>\n);\n\nexport default Input;","\nimport React from 'react';\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n);\n\nexport default icon;","import React, {useState} from 'react'\nimport {TextField, Avatar, Button, Paper, Grid, Typography, Container} from '@material-ui/core'\nimport {makeStyles,createStyles} from \"@material-ui/core/styles\"\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\nimport {GoogleLogin} from 'react-google-login';\nimport Icon from './icon'\nimport {useDispatch} from 'react-redux'\nimport{useHistory} from'react-router-dom'\nimport {signIn, signUp} from \"../../actions/auth\"\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        paper: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            padding: theme.spacing(2),\n          },\n          root: {\n            '& .MuiTextField-root': {\n              margin: theme.spacing(1),\n            },\n          },\n          avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n          },\n          form: {\n            width: '100%', // Fix IE 11 issue.\n            marginTop: theme.spacing(3),\n          },\n          submit: {\n            margin: theme.spacing(3, 0, 2),\n          },\n          googleButton: {\n            marginBottom: theme.spacing(2),\n          },\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\nconst initialFormState = {\n    firstName: '', \n    lastName:'', \n    email: '', \n    password:'', \n    confirmPassword:''\n};\n\nconst Auth = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignup, setIsSignup] = useState(false)\n    const [formData, setFormData] = useState(initialFormState)\n\n    //whever you're changing the state based on the old state need a callback function\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword)\n\n    const handleSubmit = (e) =>{\n        //prevents browser refresh\n        e.preventDefault( )\n        \n        if(isSignup){\n            //we pass history so we can navigate once something happens\n            dispatch(signUp(formData, history))\n        }else{\n            dispatch(signIn(formData,history))\n        }\n\n    }\n\n    const handleChange = (e) =>{\n        setFormData({...formData, [e.target.name]: e.target.value })\n\n    }\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup)\n        setShowPassword(false)\n    }\n\n    const googleSuccess = async (res) =>{\n        // optional chaining operator ?. won't throw an error if we don't have access to res object\n        const result = res?.profileObj\n        const token = res?.tokenId\n\n        //since we're doing async\n        //since we added the dispatch here, we need to add a reducer\n        try{\n            dispatch({type: 'AUTH', data:{result,token}});\n            //return back to home page after dispatch\n            history.push('/')\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    const googleFailure = (error) => {\n        console.log(error)\n        console.log(\"Google Sign In was unsuccessful. Try Again Later\")\n    }\n    \n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                        { isSignup && (\n                            <>\n                                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                            </>\n                        )}\n                         <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        { isSignup ? 'Sign Up' : 'Sign In' }\n                    </Button>\n                    <GoogleLogin\n                        clientId=\"169043271579-015eh75ftd5o43mp6k41llbc6ukik5ns.apps.googleusercontent.com\"\n                        render={(renderProps) => (\n                        <Button \n                            className={classes.googleButton} \n                            color=\"primary\" \n                            fullWidth \n                            onClick={renderProps.onClick} \n                            disabled={renderProps.disabled} \n                            startIcon={<Icon />} \n                            variant=\"contained\"\n                        >\n                            Google Sign In\n                        </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                {isSignup ? 'Already have an account? Sign In' : \"Dont have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth\n","import * as api from '../api'\nimport {AUTH} from '../constants/actionTypes'\n\n//if action creators are async we have to use redux thunk\nexport const signIn = (formData, history) => async(dispatch) => {\n    try{\n        //log in the user after setting up backend endpoints and creating api calls\n        const {data} = await api.signIn(formData)\n\n        dispatch({type: AUTH, data})\n\n        history.push('/')\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const signUp = (formData, history) => async(dispatch) => {\n    try{\n        const {data} = await api.signUp(formData)\n\n        dispatch({type: AUTH, data})\n        \n        history.push('/')\n    }catch(error){\n        console.log(error)\n    }\n}","import React from 'react';\nimport {makeStyles,createStyles} from \"@material-ui/core/styles\"\nimport { Container } from '@material-ui/core';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport Navbar from './components/Navbar/Navbar';\nimport Auth from './components/Auth/Auth';\n\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n      [theme.breakpoints.down('sm')]:{\n        mainContainer:{\n          flexdirection: \"column-reverse\",\n        }\n      }\n        // eslint-disable-next-line comma-dangle\n    })\n);\n\nconst App = () => (\n  <BrowserRouter>\n    <Container maxWidth=\"lg\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/auth\" exact component={Auth} />\n      </Switch>\n    </Container>\n  </BrowserRouter>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AUTH, LOGOUT} from '../constants/actionTypes'\n\nconst authReducer=(state = {authData: null},action) =>{\n    switch(action.type){\n        case AUTH:\n            //use local storage b/c that way when we refresh, browser will still know we're logged in\n            localStorage.setItem('profile', JSON.stringify({...action?.data}))\n            return {...state, authData: action?.data}\n        case LOGOUT:\n            //clears local storage so that if you refresh the page, you stay logged out\n            localStorage.clear();\n            return {...state, authData: null}\n        default:\n            return state\n    }\n}\n\nexport default authReducer","import {combineReducers } from 'redux'\n\nimport Posts from \"./postsReducers\"\nimport Auth from './auth'\n\nexport default combineReducers({\n    Posts, Auth\n})","import {FETCH_ALL, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes'\n\nexport default (posts = [] ,action) => {\n    switch(action.type){\n        case FETCH_ALL:\n            return action.payload;\n        // returns an array of posts, spread the posts so they don't get over written and add new post\n        case CREATE:\n            return [...posts, action.payload];\n        case UPDATE:\n        case LIKE:\n            //if the post id is equal to the updated post's id then return the updated post else just return the post w/o updates\n            return posts.map((post)=> post._id === action.payload._id ? action.payload : post)\n        case DELETE:\n            return posts.filter((post) => post._id != action.payload )\n        default:\n            return posts\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nimport './index.css'\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}